{"version":3,"sources":["components/Header.js","actions/index.js","components/Choice.js","components/ChoiceContainer.js","components/OutcomeDeclaration.js","components/ChoiceReveal.js","components/Game.js","components/modals/RulesModal.js","components/Rules.js","App.js","reducers/index.js","index.js"],"names":["connect","state","score","props","className","data-testid","TOGGLE_GAME","toggleGame","type","PLAYER_CHOICE","HOUSE_CHOICE","DECIDE_WINNER","decidePlayerChoice","choice","payload","name","onClick","src","process","alt","ChoiceContainer","outcome","playerChoice","houseChoice","decideWinner","decideHouseChoice","useEffect","gameStart","RulesModal","visible","exit","Rules","useState","modalVisibility","setModalVisibility","App","setScore","choices","initialState","reducer","actions","Math","floor","random","length","win","lose","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28aad2dd.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nexport function Header(props) {\n    const { score } = props;\n    return (\n        <header>\n          <h1>\n              ROCK<br/>\n              PAPER<br/>\n              SCISSORS<br/>\n            </h1>\n            <div className=\"score-container\">\n                <h2>Score</h2>\n                <span \n                    className=\"score\"\n                    data-testid=\"score-container\"\n                >{score}</span>\n            </div>\n        </header>\n    )\n}\n\nconst mapPropsToState = (state) => ({\n    score: state.score\n})\n\nexport default connect(mapPropsToState)(Header)\n","export const TOGGLE_GAME = \"TOGGLE_GAME\";\nexport const toggleGame = () => ({\n    type: TOGGLE_GAME\n})\n\nexport const PLAYER_CHOICE = \"PLAYER_CHOICE\";\nexport const decidePlayerChoice = (choice) => ({\n    type: PLAYER_CHOICE, payload: choice\n})\n\nexport const HOUSE_CHOICE = \"HOUSE_CHOICE\";\nexport const decideHouseChoice = (choice) => ({\n    type: HOUSE_CHOICE\n})\n\nexport const DECIDE_WINNER = \"DECIDE_WINNER\";\nexport const decideWinner = () => ({\n    type: DECIDE_WINNER\n})\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { decidePlayerChoice, toggleGame } from \"../actions\";\n\nexport function Choice(props) {\n    const { name, decidePlayerChoice, toggleGame } = props;\n    \n    const handleClick = () => {\n        decidePlayerChoice(name);\n        toggleGame();\n    }\n    \n    return (\n        <div className={`choice-border ${name}`}>\n            <div\n                onClick={handleClick} \n                className={`choice`} \n                data-testid=\"choice-btn\"\n            >\n                <img \n                    src={`${process.env.PUBLIC_URL}/images/icon-${name}.svg`} \n                    alt=\"possible choice\"\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default connect(null, { toggleGame, decidePlayerChoice })(Choice)","import React from 'react'\nimport Choice from \"./Choice\";\n\nexport default function ChoiceContainer() {\n    return (\n        <div className=\"choice-container\">\n            <Choice name=\"rock\"/>\n            <Choice name=\"scissors\"/>\n            <Choice name=\"paper\"/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleGame } from \"../actions\";\n\nexport function OutcomeDeclaration(props) {\n    const { outcome, toggleGame, className } = props;\n    return (\n        <div className={className}>\n            <h2 data-testid=\"outcome\">{outcome}</h2>\n            <button \n                onClick={toggleGame}\n                data-testid=\"toggle-btn\"\n            >Play Again</button>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    outcome: state.outcome,\n})\n\nexport default connect(mapStateToProps, { toggleGame })(OutcomeDeclaration);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { toggleGame, decideWinner, decideHouseChoice } from \"../actions\";\nimport Choice from \"./Choice\";\nimport OutcomeDeclaration from './OutcomeDeclaration';\n\nfunction ChoiceReveal(props) {\n    \n    const { playerChoice, houseChoice, decideWinner, decideHouseChoice } = props;\n    \n    useEffect(() => {\n        decideHouseChoice()\n        decideWinner()\n    }, [])\n\n    return <>\n        <div className=\"choice-reveal\">\n            <div className=\"player-choice\">\n                <h2>You Picked</h2>\n                <Choice name={playerChoice}/>\n            </div>\n            <OutcomeDeclaration className=\"outcome-declaration-desktop\"/>\n            <div className=\"house-choice\">\n                <h2>The House Picked</h2>\n                <Choice name={houseChoice}/>\n            </div>\n            <OutcomeDeclaration className=\"outcome-declaration-mobile\"/>\n        </div>\n    </>\n}\n\nconst mapStateToProps = (state) => ({\n    outcome: state.outcome,\n    playerChoice: state.playerChoice,\n    houseChoice: state.houseChoice\n})\n\nexport default connect(mapStateToProps, { toggleGame, decideWinner, decideHouseChoice })(ChoiceReveal)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ChoiceContainer from \"./ChoiceContainer\";\nimport ChoiceReveal from './ChoiceReveal';\n\nfunction Game(props) {\n    const { gameStart } = props;\n    return (\n        <section className=\"game-container\">\n            {gameStart ? <ChoiceReveal /> : <ChoiceContainer />}\n        </section>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    gameStart: state.gameStart\n})\n\nexport default connect(mapStateToProps)(Game)\n","import React from 'react';\n\nexport default function RulesModal(props) {\n    const { visible, exit } = props\n    if (!visible) return null\n    return (\n        <div className=\"backdrop\">\n            <div className=\"rules-modal\">\n                <div className=\"rules-modal-top\">\n                    <h2 className=\"rules-title\">RULES</h2>\n                    <button \n                        onClick={exit}\n                        className=\"exit-button-desktop\"\n                    >X</button>\n                </div>\n                <img src={`${process.env.PUBLIC_URL}/images/image-rules.svg`} alt=\"rules\"/>\n                <button \n                    onClick={exit}\n                    className=\"exit-button-mobile\"\n                >X</button>\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport RulesModal from \"./modals/RulesModal\";\n\nexport default function Rules() {\n    const [modalVisibility, setModalVisibility] = useState(false)\n    return (\n        <div>\n            <button\n                onClick={() => setModalVisibility(true)} \n                className=\"rules-button\">\n                Rules\n            </button>\n            <RulesModal visible={modalVisibility} exit={() => setModalVisibility(false)} />\n        </div>\n    )\n}\n","import { useState } from \"react\";\nimport \"./styles/style.css\";\nimport Header from \"./components/Header\";\nimport Game from \"./components/Game\";\nimport Rules from \"./components/Rules\";\n\nfunction App() {\n  const [score, setScore] = useState(0)\n  return (\n  <>\n    <Header score={score} />\n    <main className=\"App\">\n      <Game setScore={setScore} />\n      <Rules />\n    </main>\n  </>\n  );\n}\n\nexport default App;\n","import { TOGGLE_GAME, PLAYER_CHOICE, HOUSE_CHOICE, DECIDE_WINNER } from \"../actions\";\n\nconst choices = [\"rock\", \"paper\", \"scissors\"]\n\nconst initialState = {\n    playerChoice: \"\",\n    houseChoice: \"\",\n    outcome: \"\",\n    gameStart: false,\n    score: 0\n}\n\nconst reducer = (state = initialState, actions) => {\n    switch(actions.type) {\n        case TOGGLE_GAME:\n            return {\n                ...state,\n                gameStart: !state.gameStart\n            }\n        case PLAYER_CHOICE:\n            return {\n                ...state,\n                playerChoice: actions.payload\n            }\n        case HOUSE_CHOICE:\n            return {\n                ...state,\n                houseChoice: choices[Math.floor(Math.random() * choices.length)]\n            }\n        case DECIDE_WINNER:\n            const win = {\n                ...state,\n                outcome: \"YOU WIN\",\n                score: state.score + 1\n            }\n            const lose = {\n                ...state,\n                outcome: \"YOU LOSE\",\n                score: state.score - 1\n            }\n            if (state.playerChoice === \"rock\" && state.houseChoice === \"scissors\") return win;\n            if (state.playerChoice === \"paper\" && state.houseChoice === \"rock\") return win;\n            if (state.playerChoice === \"scissors\" && state.houseChoice === \"paper\") return win;\n            if (state.houseChoice === \"rock\" && state.playerChoice === \"scissors\") return lose;\n            if (state.houseChoice === \"paper\" && state.playerChoice === \"rock\") return lose;\n            if (state.houseChoice === \"scissors\" && state.playerChoice === \"paper\") return lose;\n            return {\n                ...state,\n                outcome: \"TIE\"\n            };\n        default:\n            return state\n    }\n}\nexport default reducer; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}